sudo usermod -aG ubuntu docker

MAVEN PACKAGE OR BUILD BY DOCKER OR DOCKER IMAGES
=================================================

METHOD-1
--------
1. docker build -t anildocker11/maven-anil:1.0.0 .   -----> maven package----------> build by maven through      

anildocker11(optional--->ivachu leda ivvakudadu)

but maven-anil give crrt for better readabilty

give version also


METHOD-2
--------
2. docker build -f Dockerfile -t anildocker11/maven-anil:1.0.0 .

here dockerfile means we should have file in linux server | in that dockerfile having instructions



DEPLOY INTO TOMCAT OR DOCKER CONTAINER
=====================================

docker run -d -p 7000:8080 --name mavencon anildocker11/maven-anil-1.0.0---->deploy to tomcat through    



without images can create images
================================

1. docker run -d -p 1234:8080 --name tomcatcon tomcat

2. docker run -d -p 6666:9000 --name sonarcon sonarqube

3. docker run -d -p 9999:8081 --name nexuscon sonatype/nexus3

4. docker run -d -p 6699:8080 --name jenkinscon jenkins/jenkins



TAG NAME IN LINUX-SERVER
========================

1. docker tag anildocker11/maven-anil:1.0.0  ----------------> give tag name

================================================================================================================================================
***  DOCKER IMAGES LO TOMCAT AND MAVEN UNTE APPUDU TOMCAT KI MANA NAME(anil-tomcat) AND VERSION(0.0.0) THO TAG CHEYVACHU THEN PUSH AND PULL  ***
================================================================================================================================================



PUSH AND PULL TO DOCKER-HUB
===============================

1. docker push anildocker11/maven-anil:1.0.0 .  ------------> push to docker-hub repo

2. docker pull anildocker11/maven-anil:1.0.0  ---------------> pull from docker-hub repo
 



| Part                | Description                                                       |
| ------------------- | ----------------------------------------------------------------- |
| `docker run`        | Start a new container                                             |
| `-d`                | Run in detached (background) mode                                 |
| `-p 6699:8080`      | Map host port **6699** â†’ container port **8080** (Jenkins web UI) |
| `--name jenkinscon` | Name the container `jenkinscon`                                   |
| `jenkins/jenkins`   | Use the **official Jenkins image** from Docker Hub                |



| Tool          | Default Port | Notes                                                                 |
| ------------- | ------------ | --------------------------------------------------------------------- |
| **Tomcat**    | 8080         | Web application server. Can be changed in `server.xml`.               |
| **SonarQube** | 9000         | Web interface. Can be changed in `sonar.properties`.                  |
| **Nexus**     | 8081         | Repository manager (Nexus 3.x). Can be changed in `nexus.properties`. |
| **Jenkins**   | 8080         | Web UI. Can be changed using `--httpPort` or environment variable.    |







commands
========

docker info 
docker --version or docker version

image related
=============

How to build docker image
-------------------------

docker build -t <image> <buildContext>

docker build -t kkeducation123456/java-web-app:1 .
docker build -t nexus.jio.com/java-web-app:1 .

docker build -f customName kkeducation123456/java-web-app:1 .


How to list the images
----------------------

docker images or docker image ls

How to login docker hub
-----------------------

docker login -u username -p password

docker info

cat password |docker login -u kkeducation12345 --password-stdin

How to logout 
-------------

docker logout
docker info


How to push an docker image
---------------------------
docker push kkeducation123456/java-web-app:1 .


How to pull the image
---------------------

docker pull kkeducation123456/java-web-app:1

to see more details about image
-------------------------------

docker image inspect <imageid/imageName>

To see the layers of an image
-----------------------------

docker history <imageId/ImageName>

How to delete image
-------------------

docker rmi <image_id/Image_name>


How to delete multiple images?
------------------------------

docker rmi <image1> <image2>

How to delete all the images
----------------------------

docker rmi -f $(docker images -q)

what is dangling images?
------------------------

How to display only dangling images?
------------------------------------

docker images -f dangling=true

how to delete all the dangling images?
---------------------------------------

docker rmi -f $(docker images -q -f dangling=true)



docker system prune
docker image prune
docker container prune
docker network prune
docker volume prune



docker tag
-----------

docker tag  kkeducation123456/java-web-app:1 customname



docker system df
----------------


How to move image from one server to another server?
----------------------------------------------------

Approach 1: Use the nexus/Jfrog/DTR/ECR

Approach 2:

   docker save -o <filename>.tar <imageId>
   scp filename.tar ubuntu@172.34.42.78:/home/ubuntu

  docker load -i filename.tar
